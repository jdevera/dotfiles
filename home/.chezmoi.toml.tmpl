# By default, chezmoi diff will print the contents of scripts that would be run
# by chezmoi apply. To exclude scripts from the output of chezmoi diff, set
# diff.exclude in your configuration file, for example:
[diff]
    exclude = ["scripts"]

# chezmoi provides a hooks.read-source-state.pre hook that allows you to modify
# your system after chezmoi init has cloned your dotfile repo but before chezmoi
# has read the source state. This is the perfect time to install your password
# manager as you can assume that ~/.local/share/chezmoi is populated but has not
# yet been read.
[hooks.read-source-state.pre]
    command = ".local/share/chezmoi/home/.install-one-password.sh"

# ------------------------------------------------------------
# Data
# ------------------------------------------------------------
{{- /*
-----------------------------------------------------------------------------
Machine information
-----------------------------------------------------------------------------
*/ -}}
{{- $is_macos := eq .chezmoi.os "darwin" -}}
{{- $is_linux := eq .chezmoi.os "linux" -}}

{{- $hostname := .chezmoi.hostname -}}
{{- if $is_macos -}}
{{- /* Determine the hostname
    The result of the hostname command on macOS depends on the network that the
    machine is connected to. For a stable result, use the scutil command */ -}}
{{-     $hostname = output "scutil" "--get" "ComputerName" | trim -}}
{{- end -}}

{{- /*
Interactive hosts are hosts I interact directly with, rather than through other
machines.
*/ -}}

{{- $interactive_hosts := list "nexon" -}}
{{- $is_interactive := false -}}

{{- if $is_macos -}}
{{-     $is_interactive = true -}}
{{- else -}}
{{-     range $interactive_hosts -}}
{{-         if eq . $.chezmoi.hostname -}}
{{-             $is_interactive = true -}}
{{-             break -}}
{{-         end -}}
{{-     end -}}
{{- end }}

{{- /*
Headless detection - systems that should NOT have GUI packages
*/ -}}

{{- $headful_hosts := list "nexon" -}}
{{- $is_headless := true -}}

{{- /* Never headless on macOS */ -}}
{{- if $is_macos -}}
{{-     $is_headless = false -}}
{{- else -}}
{{- /* Check if hostname is in explicit headful hosts list */ -}}
{{-     range $headful_hosts -}}
{{-         if eq . $.chezmoi.hostname -}}
{{-             $is_headless = false -}}
{{-             break -}}
{{-         end -}}
{{-     end -}}
{{- end }}

{{- /* Work machine vs personal machine */ -}}
{{- $work_hosts := list "nerith" -}}
{{- $is_work := false -}}
{{- range $work_hosts -}}
{{-     if eq . $.chezmoi.hostname -}}
{{-         $is_work = true -}}
{{-         break -}}
{{-     end -}}
{{- end -}}

{{- /*
-----------------------------------------------------------------------------
Personal information
-----------------------------------------------------------------------------
*/ -}}
{{- $identity_entry := "op://dotfiles/Github Identity - Personal"}}
{{- if $is_work -}}
{{-     $identity_entry = "op://dotfiles/Github Identity - Work" -}}
{{- end -}}
{{- $email := onepasswordRead (printf "%s/email" $identity_entry) -}}
{{- $first_name := onepasswordRead (printf "%s/first name" $identity_entry) -}}
{{- $last_name := onepasswordRead (printf "%s/last name" $identity_entry) -}}
{{- $ghuser := onepasswordRead (printf "%s/github" $identity_entry) -}}
{{- $full_name := printf "%s %s" $first_name $last_name -}}

{{- /* Data: keep this here for the newline */}}
[data]
    email = {{ $email | quote }}
    fname = {{ $full_name | quote }}
    ghuser = {{ $ghuser | quote }}
    is_interactive = {{ $is_interactive }}
    is_headless = {{ $is_headless }}
    is_macos = {{ $is_macos }}
    is_linux = {{ $is_linux }}
    is_work = {{ $is_work }}
    copy_command = {{ if $is_macos }}"pbcopy"{{ else }}"xsel --clipboard --input"{{ end }}


{{/*
vim:ft=gotexttmpl:
*/}}
